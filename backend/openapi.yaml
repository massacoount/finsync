openapi: 3.0.0
info:
  title: Finsync API
  version: 1.0.0
  description: API for managing activities in finsync.

servers:
  - url: /
    description: Default server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oauth2:
      type: oauth2
      description: |
        OAuth2 Authorization Code Flow.
        The client will be redirected to the authorization server for authentication and authorization.
      flows:
        authorizationCode:
          authorizationUrl: /api/auth/authorize
          tokenUrl: /api/auth/token
          scopes:
            read: Grants read access to user's data
            write: Grants write access to user's data
            admin: Grants administrative access to user's data
  schemas:
    TokenRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum: [authorization_code, refresh_token, password]
        code:
          type: string
        redirect_uri:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        refresh_token:
          type: string

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          readOnly: true
        token_type:
          type: string
          readOnly: true
        expires_in:
          type: integer
          readOnly: true
        refresh_token:
          type: string
          readOnly: true
        scope:
          type: string
          readOnly: true

    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          readOnly: true
        user_name:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
          format: date

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Account:
      type: object
      properties:
        account_id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: string
          format: uuid
        account_name:
          type: string
        opening_balance:
          type: number
          format: float
        current_balance:
          type: number
          format: float
        account_type:
          type: string
          enum: [CHECKING, SAVINGS, CREDIT, INVESTMENT]
        openting_date:
          type: string
          format: date

    Transaction:
      type: object
      properties:
        transaction_id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: string
          format: uuid
        description:
          type: string
        amount:
          type: number
          format: float
        from_account_id:
          type: string
          format: uuid
        to_account_id:
          type: string
          format: uuid
        category_id:
          type: string
          format: uuid
        tag_id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time

    Tag:
      type: object
      properties:
        tag_id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: string
          format: uuid
        tag_name:
          type: string

    Budget:
      type: object
      properties:
        buddget_id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: string
          format: uuid
        category_id:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    LedgerEntry:
       type: object
       properties:
          ledger_entry_id:
            type: string
            format: uuid
            readOnly: true
          user_id:
            type: string
            format: uuid
          date:
            type: string
            format: date
          description:
            type: string
          amount:
            type: number
            format: float
          status:
            type: string

security:
  - bearerAuth: []

paths:
  /api/auth/authorize:
    get:
      summary: "Authorize"
      description: "Authorize a user using OAuth2"
      parameters:
        - name: response_type
          in: query
          required: true
          schema:
            type: string
            enum: [code]
          description: "The type of response desired, typically 'code' for authorization code flow."
        - name: client_id
          in: query
          required: true
          schema:
            type: string
          description: "The client Id of the application making the request."
        - name: redirect_uri
          in: query
          required: true
          schema:
           type: string
          description: "The URI to redirect the user to after authorization."
        - name: scope
          in: query
          required: false
          schema:
            type: string
          description: "The scope of the access request."
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: "An opaque value used to maintain state between the request and callback."
      responses:
        "302":
          description: "Redirect to the client with authorization code"
          headers:
            Location:
              description: URL to redirect to with the authorization code and state
              schema:
                type: string
                format: uri
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized (e.g., invalid client_id or client secret)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden (e.g., user denies access)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/auth/token:
    post:
      summary: "Token"
      description: "Exchange authorization code or refresh token for an access token"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: "Access token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Invalid client or user credentials"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/auth/userinfo:
    get:
      summary: "User Info"
      description: "Get user information using the access token"
      security:
        - bearerAuth: []
        - oauth2: []
      responses:
        "200":
          description: "User information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/accounts:
    get:
      summary: List all accounts
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/accounts/{accountId}:
    get:
      summary: Get a specific account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          description: Account updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Account deleted
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/transactions:
    get:
      summary: List all transactions
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/transactions/{transactionId}:
    get:
      summary: Get a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: Transaction updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Transaction deleted
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/tags:
    get:
      summary: List all tags
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tag"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
      responses:
        "200":
          description: Tag created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/tags/{tagId}:
    put:
      summary: Update a tag
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
      responses:
        "200":
          description: Tag updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a tag
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Tag deleted
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/budgets:
    get:
      summary: List all budgets
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Budget"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new budget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Budget"
      responses:
        "201":
          description: Budget created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/budgets/{budgetId}:
    get:
      summary: Get a specific budget
      parameters:
        - name: budgetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a budget
      parameters:
        - name: budgetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Budget"
      responses:
        "200":
          description: Budget updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a budget
      parameters:
        - name: budgetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Budget deleted
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
